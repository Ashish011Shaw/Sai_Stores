// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id         Int      @id @default(autoincrement())
  admin_name String
  email      String   @unique
  password   String
  mobile     String?
  created_at DateTime @default(now())
  User       User[]
}

model Product {
  id             Int              @id @default(autoincrement())
  product_name   String
  quantity       Int
  price          Int
  created_at     DateTime         @default(now())
  Wishlist       Wishlist[]
  Cart           Cart[]
  OrderedProduct OrderedProduct[]
}

model User {
  id             Int        @id @default(autoincrement())
  name           String
  email          String     @unique
  password       String
  mobile         String?
  shping_address String
  Wishlist       Wishlist[]
  added_by       Admin      @relation(fields: [admin_id], references: [id], onDelete: Cascade)
  admin_id       Int
  created_at     DateTime   @default(now())
  Cart           Cart[]
  Order          Order[]
}

model Wishlist {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id Int
  created_at DateTime @default(now())
}

model Cart {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id Int
  quantity   Int      @default(1)
  created_at DateTime @default(now())
}

model Order {
  id              Int              @id @default(autoincrement())
  user            User             @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         Int
  total_price     Int
  created_at      DateTime         @default(now())
  OrderedProducts OrderedProduct[]
}

model OrderedProduct {
  id         Int      @id @default(autoincrement())
  order      Order    @relation(fields: [order_id], references: [id], onDelete: Cascade)
  order_id   Int
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id Int
  quantity   Int      @default(1)
  price      Int
  created_at DateTime @default(now())
}

// Catagory
model Catagory {
  id           Int       @id @default(autoincrement())
  catagoryName String
  created_at   DateTime  @default(now())
  updated_at   DateTime? @default(now()) @updatedAt
}
